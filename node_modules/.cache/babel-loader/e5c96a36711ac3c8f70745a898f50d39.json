{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Each \"ItemType\" element in the array have a array of children ID's. These refer\n// to a ItemType.\n// = This has a infinite depth.\nconst items = [{\n  id: 1,\n  title: \"Item 1\",\n  children: [1, 2, 3]\n}, {\n  id: 2,\n  title: \"Item 2\",\n  children: [12, 3, 4]\n}, {\n  id: 3,\n  title: \"Item 3\",\n  children: [1, 2, 4]\n}, {\n  id: 4,\n  title: \"Item 3\",\n  children: [1, 2, 3]\n}]; // Function to find a Item by child id.\n\nfunction findChild(childId) {\n  //console.log(items.find())\n  return items.find(({\n    id\n  }) => id === childId);\n}\n/*\nfunction replyComment() {\n  \n  console.log(\"aaaaa : \");\n  //return  <div>aaacccc</div>\n}\n*/\n\n\nconst replyComment = (idval, val) => {\n  return event => {\n    console.log(\"show input\" + idval + \" -- \" + val);\n    event.preventDefault();\n  };\n};\n\nconst addComment = child => {\n  return event => {\n    const itemscoba = [{\n      id: 1,\n      title: \"Item 1\",\n      children: [2, 3, 4]\n    }, {\n      id: 2,\n      title: \"Item 2\",\n      children: [5, 6, 7]\n    }, {\n      id: 3,\n      title: \"Item 3\",\n      children: [8, 9, 10]\n    }, {\n      id: 4,\n      title: \"Item 3\",\n      children: [11, 12, 31]\n    }]; //itemscoba.push({ id: 88, title: \"Item 1\", children: [99] });\n    //itemscoba[0].children.push(123)\n    //console.table(itemscoba[0].children)\n    //child.push(99)\n    //console.table(child);\n    //console.log(itemscoba[0].children.push(99));\n\n    event.preventDefault();\n  };\n};\n\nfunction Item({\n  title,\n  children\n}) {\n  _s();\n\n  const [open, toggle] = useState(false); // Given the children array with IDs, find each Item we refer to\n\n  const childElements = children.map(findChild);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: [title, \" children \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggle(!open),\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: open && childElements.map(child => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Child: \", child.title, /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Item, { ...child\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: replyComment(child.id, child.title),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addComment(children),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"W3ZWTf4MnDr89kFGLFIV1TgZH7o=\");\n\n_c = Item;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: items.map(item => /*#__PURE__*/_jsxDEV(Item, { ...item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx"],"names":["React","useState","items","id","title","children","findChild","childId","find","replyComment","idval","val","event","console","log","preventDefault","addComment","child","itemscoba","Item","open","toggle","childElements","map","App","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { idText } from \"typescript\";\n\ntype ItemType = {\n  id: Number;\n  title: String;\n  children: Array<Number>;\n};\n\n// Each \"ItemType\" element in the array have a array of children ID's. These refer\n// to a ItemType.\n// = This has a infinite depth.\nconst items: ItemType[] = [\n  { id: 1, title: \"Item 1\", children: [1, 2, 3] },\n  { id: 2, title: \"Item 2\", children: [12, 3, 4] },\n  { id: 3, title: \"Item 3\", children: [1, 2, 4] },\n  { id: 4, title: \"Item 3\", children: [1, 2, 3] }\n];\n\n\n// Function to find a Item by child id.\nfunction findChild(childId: Number): ItemType | undefined {\n  //console.log(items.find())\n  return items.find(({ id }) => id === childId);\n}\n\n/*\nfunction replyComment() {\n  \n  console.log(\"aaaaa : \");\n  //return  <div>aaacccc</div>\n}\n*/\n\nconst replyComment = (idval:Number, val:String) => {\n  return (event: React.MouseEvent)  =>  {\n    console.log(\"show input\"+idval+\" -- \"+val);\n    event.preventDefault();\n  }\n}\n\nconst addComment = (child:Array<Number>) => {\n  return (event: React.MouseEvent)  =>  {\n\n    const itemscoba = [\n      { id: 1, title: \"Item 1\", children: [2, 3, 4] },\n      { id: 2, title: \"Item 2\", children: [5, 6, 7] },\n      { id: 3, title: \"Item 3\", children: [8, 9, 10] },\n      { id: 4, title: \"Item 3\", children: [11, 12, 31] }\n    ];\n\n    //itemscoba.push({ id: 88, title: \"Item 1\", children: [99] });\n    //itemscoba[0].children.push(123)\n    //console.table(itemscoba[0].children)\n    //child.push(99)\n\n    //console.table(child);\n    //console.log(itemscoba[0].children.push(99));\n      \n    event.preventDefault();\n  }\n}\n\nfunction Item({ title, children }: ItemType): JSX.Element {\n  const [open, toggle] = useState(false);\n\n  // Given the children array with IDs, find each Item we refer to\n  const childElements = children.map(findChild) as ItemType[];\n\n  return (\n    <div>\n      <h6>\n        {title} children <button onClick={() => toggle(!open)}>Open</button>\n      </h6>\n      <ul>\n        {/* Loop children and run recursive */}\n        {open &&\n          childElements.map((child: ItemType) => (\n            \n            <li>\n              <div>Child: {child.title}<input /></div>\n              <Item {...child} />\n              <button onClick={replyComment(child.id, child.title)}>Reply</button>\n              <button onClick={addComment(children)}>Submit</button>\n              <button>Edit</button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div>\n      {/* Start by iterating over all items */}\n      {items.map(item => (\n        <Item {...item} />\n      ))}\n    </div>\n  );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}