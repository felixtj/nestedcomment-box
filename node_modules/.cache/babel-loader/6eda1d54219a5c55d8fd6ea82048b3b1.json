{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst commentData = {\n  title: \"Fake article title.\",\n  author: \"grzm\",\n  comments: [{\n    id: 1,\n    text: \"Example comment here.\",\n    author: \"user2\",\n    children: [{\n      id: 2,\n      text: \"Another example comment text.\",\n      author: \"user3\",\n      children: [{\n        id: 3,\n        text: \"Another example comment text.\",\n        author: \"user4\",\n        children: []\n      }]\n    }]\n  }, {\n    id: 4,\n    text: \"Example comment here 2.\",\n    author: \"user5\",\n    children: []\n  }]\n};\n\nfunction Comment({\n  comment\n}) {\n  const nestedComments = (comment.children || []).map(comment => {\n    return /*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment,\n      type: \"child\"\n    }, comment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"marginLeft\": \"25px\",\n      \"marginTop\": \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: comment.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), nestedComments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Comment;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: commentData.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx"],"names":["React","commentData","title","author","comments","id","text","children","Comment","comment","nestedComments","map","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,qBADsB;AAE7BC,EAAAA,MAAM,EAAE,MAFqB;AAG7BC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,uBAFR;AAGEH,IAAAA,MAAM,EAAE,OAHV;AAIEI,IAAAA,QAAQ,EAAE,CACR;AACEF,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,+BAFR;AAGEH,MAAAA,MAAM,EAAE,OAHV;AAIEI,MAAAA,QAAQ,EAAE,CACR;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,+BAFR;AAGEH,QAAAA,MAAM,EAAE,OAHV;AAIEI,QAAAA,QAAQ,EAAE;AAJZ,OADQ;AAJZ,KADQ;AAJZ,GADQ,EAqBR;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,yBAFR;AAGEH,IAAAA,MAAM,EAAE,OAHV;AAIEI,IAAAA,QAAQ,EAAE;AAJZ,GArBQ;AAHmB,CAA/B;;AAwCA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAC5B,QAAMC,cAAc,GAAG,CAACD,OAAO,CAACF,QAAR,IAAoB,EAArB,EAAyBI,GAAzB,CAA6BF,OAAO,IAAI;AAC7D,wBAAO,QAAC,OAAD;AAA0B,MAAA,OAAO,EAAEA,OAAnC;AAA4C,MAAA,IAAI,EAAC;AAAjD,OAAcA,OAAO,CAACJ,EAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFsB,CAAvB;AAIA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAC,oBAAc,MAAf;AAAuB,mBAAa;AAApC,KAAZ;AAAA,4BACE;AAAA,gBAAMI,OAAO,CAACH;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGI,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAXQF,O;;AAaT,SAASI,GAAT,GAAe;AACb,sBACE;AAAA,cAEIX,WAAW,CAACG,QAAZ,CAAqBO,GAArB,CAA0BF,OAAD,IAAa;AACpC,0BACE,QAAC,OAAD;AAA0B,QAAA,OAAO,EAAEA;AAAnC,SAAcA,OAAO,CAACJ,EAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJD;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;MAZQO,G;AAcT,eAAeA,GAAf","sourcesContent":["import React from \"react\"\n\nconst commentData : FileNode = {\n  title: \"Fake article title.\",\n  author: \"grzm\",\n  comments: [\n    {\n      id: 1,\n      text: \"Example comment here.\",\n      author: \"user2\",\n      children: [\n        {\n          id: 2,\n          text: \"Another example comment text.\",\n          author: \"user3\",\n          children: [\n            {\n              id: 3,\n              text: \"Another example comment text.\",\n              author: \"user4\",\n              children: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: 4,\n      text: \"Example comment here 2.\",\n      author: \"user5\",\n      children: []\n    }\n  ]\n}\n\ntype comment = {\n  id: number,\n  title: string,\n  author: string,\n  comments? : commentData[];\n}\n\nfunction Comment({ comment }) {\n  const nestedComments = (comment.children || []).map(comment => {\n    return <Comment key={comment.id} comment={comment} type=\"child\" />\n  })\n\n  return (\n    <div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n      <div>{comment.text}</div>\n      {nestedComments}\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div>\n      {\n        commentData.comments.map((comment) => {\n          return (\n            <Comment key={comment.id} comment={comment} />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}