{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const commentData = {\n  id: 1,\n  text: \"Example comment here.\",\n  author: \"John\",\n  children: [{\n    id: 11,\n    text: \"Example comment here.\",\n    author: \"Stve\",\n    children: [{\n      id: 111,\n      text: \"Another example comment text.\",\n      author: \"Rachel\",\n      children: [{\n        id: 1112,\n        text: \"Another example comment text.\",\n        author: \"Junior\",\n        children: []\n      }, {\n        id: 1113,\n        text: \"Another example comment text.\",\n        author: \"Gerrard\",\n        children: []\n      }]\n    }]\n  }, {\n    id: 12,\n    text: \"Example comment here 2.\",\n    author: \"Ronaldo\",\n    children: []\n  }]\n};\n\nfunction Comments({\n  comment\n}) {\n  const nestedComments = (comment.children || []).map(comment => {\n    //comment.id\n    return /*#__PURE__*/_jsxDEV(Comments, {\n      comment: comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }, this);\n  }); //console.table(comment.children);  \n  //<div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n  //<div>{comment.id} and {comment.author} and {comment.text}</div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-thread\",\n    children: /*#__PURE__*/_jsxDEV(\"details\", {\n      open: true,\n      className: \"comment\",\n      id: \"comment-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#comment-1\",\n        className: \"comment-border-link\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Jump to comment-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"summary\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-voting\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\u25B2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sr-only\",\n                children: \"Vote up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\u25BC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sr-only\",\n                children: \"Vote down\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"comment-author\",\n              children: [comment.id, \" & \", comment.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"m-0\",\n              children: \"22 points \\u2022 4 days ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: ReplyComment(),\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), nestedComments]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n/*\ninterface Props {\n  // any props that come into the component\n  comments : FileNode;\n}\nconst Comment: React.FC<Props> = ({comments,...props}) =>  {\n  return <div>asdadasd</div>\n}\n\n*/\n\n/*\ninterface IComment  {\n  myComment : FileNode;\n}\n\nfunction Comment (props : IComment) {\n  const {id,title,author} = props.myComment;\n\n  const nestedComments = \n\n  console.table(props.myComment.comments);\n  return <div>re</div>\n}\n*/\n\n/*\nfunction Comment({ comment }) {\n  const nestedComments = (comment.children || []).map(comment => {\n    return <Comment key={comment.id} comment={comment} type=\"child\" />\n  })\n\n  return (\n    <div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n      <div>{comment.text}</div>\n      {nestedComments}\n    </div>\n  )\n}\n*/\n\n\n_c = Comments;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Comments, {\n      comment: commentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx"],"names":["React","commentData","id","text","author","children","Comments","comment","nestedComments","map","ReplyComment","App"],"mappings":"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","sourcesContent":["import { findByTitle } from \"@testing-library/dom\"\nimport React from \"react\"\n\n\nexport interface FileNode   {\n  id : Number;\n  text : string;\n  //text : string;\n  author : string;\n  //comments : FileNode[];\n  children?: FileNode[];\n}\n\nexport const commentData: FileNode = {\n  id: 1,\n  text: \"Example comment here.\",\n  author: \"John\",\n  children: [\n    {\n      id: 11,\n      text: \"Example comment here.\",\n      author: \"Stve\",\n      children: [\n        {\n          id: 111,\n          text: \"Another example comment text.\",\n          author: \"Rachel\",\n          children: [\n            {\n              id: 1112,\n              text: \"Another example comment text.\",\n              author: \"Junior\",\n              children: []\n            },\n            {\n              id: 1113,\n              text: \"Another example comment text.\",\n              author: \"Gerrard\",\n              children: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: 12,\n      text: \"Example comment here 2.\",\n      author: \"Ronaldo\",\n      children: []\n    }\n  ]\n}\n\n\n\nfunction Comments({comment} : {comment: FileNode})   {\n  const nestedComments = (comment.children || []).map(comment => {\n    //comment.id\n    return ( <Comments comment={comment} /> )\n  })\n  \n  //console.table(comment.children);  \n  //<div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n  //<div>{comment.id} and {comment.author} and {comment.text}</div>\n  return (\n    <div className=\"comment-thread\">  \n      <details open className=\"comment\" id=\"comment-1\">\n        <a href=\"#comment-1\" className=\"comment-border-link\">\n              <span className=\"sr-only\">Jump to comment-1</span>\n          </a>\n          <summary>\n            <div className=\"comment-heading\">\n                <div className=\"comment-voting\">\n                    <button type=\"button\">\n                        <span aria-hidden=\"true\">&#9650;</span>\n                        <span className=\"sr-only\">Vote up</span>\n                    </button>\n                    <button type=\"button\">\n                        <span aria-hidden=\"true\">&#9660;</span>\n                        <span className=\"sr-only\">Vote down</span>\n                    </button>\n                </div>\n                <div className=\"comment-info\">\n                    <a href=\"#\" className=\"comment-author\">{comment.id} & {comment.author}</a>\n                    <p className=\"m-0\">\n                        22 points &bull; 4 days ago\n                    </p>\n                </div>\n            </div>\n        </summary>\n        <div className=\"comment-body\">\n            <p>{comment.text}</p>\n            <button type=\"button\" onClick={(ReplyComment())}>Reply</button>\n        </div>\n        {nestedComments}\n      </details>\n      \n    </div>\n  )\n}\n\n\n/*\ninterface Props {\n  // any props that come into the component\n  comments : FileNode;\n}\nconst Comment: React.FC<Props> = ({comments,...props}) =>  {\n  return <div>asdadasd</div>\n}\n\n*/\n\n/*\ninterface IComment  {\n  myComment : FileNode;\n}\n\nfunction Comment (props : IComment) {\n  const {id,title,author} = props.myComment;\n\n  const nestedComments = \n\n  console.table(props.myComment.comments);\n  return <div>re</div>\n}\n*/\n\n/*\nfunction Comment({ comment }) {\n  const nestedComments = (comment.children || []).map(comment => {\n    return <Comment key={comment.id} comment={comment} type=\"child\" />\n  })\n\n  return (\n    <div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n      <div>{comment.text}</div>\n      {nestedComments}\n    </div>\n  )\n}\n*/\n\nfunction App() {\n  return (\n    <div>\n      <Comments comment={commentData}  />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}