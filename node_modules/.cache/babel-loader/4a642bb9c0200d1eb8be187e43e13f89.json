{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst commentData = {\n  id: 1,\n  title: \"Fake article title.\",\n  author: \"grzm\",\n  comments: [{\n    id: 2,\n    title: \"Example comment here.\",\n    author: \"user2\",\n    children: [{\n      id: 3,\n      title: \"Another example comment text.\",\n      author: \"user3\",\n      children: [{\n        id: 4,\n        title: \"Another example comment text.\",\n        author: \"user4\",\n        children: []\n      }]\n    }]\n  }, {\n    id: 5,\n    title: \"Example comment here 2.\",\n    author: \"user5\",\n    children: []\n  }]\n};\n\nfunction ShowComments(props) {\n  const {\n    id,\n    title,\n    author\n  } = props.mycommentData;\n  const nestedComments = (props.mycommentData.comments || []).map(commentDataType => {\n    return /*#__PURE__*/_jsxDEV(ShowComments, {\n      comments: commentDataType\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  });\n  /*\n  const nestedComments = (Children || []).map(props.mycommentData =>  {\n    return <ShowComments key={id} mycommentData={commentData} />\n  })\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"aaa\", title]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ShowComments;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-thread\",\n    children: [\"nnnnn \", /*#__PURE__*/_jsxDEV(ShowComments, {\n      mycommentData: commentData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShowComments\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx"],"names":["React","commentData","id","title","author","comments","children","ShowComments","props","mycommentData","nestedComments","map","commentDataType","App"],"mappings":";AAAA,OAAOA,KAAP,MAAuD,OAAvD;;AAgBA,MAAMC,WAA4B,GAAG;AACnCC,EAAAA,EAAE,EAAE,CAD+B;AAEnCC,EAAAA,KAAK,EAAE,qBAF4B;AAGnCC,EAAAA,MAAM,EAAE,MAH2B;AAInCC,EAAAA,QAAQ,EAAE,CACR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,uBAFT;AAGEC,IAAAA,MAAM,EAAE,OAHV;AAIEE,IAAAA,QAAQ,EAAE,CACR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,KAAK,EAAE,+BAFT;AAGEC,MAAAA,MAAM,EAAE,OAHV;AAIEE,MAAAA,QAAQ,EAAE,CACR;AACEJ,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,+BAFT;AAGEC,QAAAA,MAAM,EAAE,OAHV;AAIEE,QAAAA,QAAQ,EAAE;AAJZ,OADQ;AAJZ,KADQ;AAJZ,GADQ,EAqBR;AACEJ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEC,IAAAA,MAAM,EAAE,OAHV;AAIEE,IAAAA,QAAQ,EAAE;AAJZ,GArBQ;AAJyB,CAArC;;AAuCA,SAASC,YAAT,CAAsBC,KAAtB,EAA6C;AAC3C,QAAM;AAACN,IAAAA,EAAD;AAAIC,IAAAA,KAAJ;AAAUC,IAAAA;AAAV,MAAoBI,KAAK,CAACC,aAAhC;AACA,QAAMC,cAAc,GAAG,CAACF,KAAK,CAACC,aAAN,CAAoBJ,QAApB,IAAgC,EAAjC,EAAqCM,GAArC,CAAyCC,eAAe,IAAI;AACjF,wBAAO,QAAC,YAAD;AAAuB,MAAA,QAAQ,EAAEA;AAAjC,OAAmBV,EAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFsB,CAAvB;AAGA;AACF;AACA;AACA;AACA;;AACE,sBAAO;AAAA,sBACDC,KADC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGD;;KAbQI,Y;;AAgBT,SAASM,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,sCACQ,QAAC,YAAD;AAAc,MAAA,aAAa,EAAEZ;AAA7B;AAAA;AAAA;AAAA;AAAA,YADR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQY,G;AAQT,eAAeA,GAAf","sourcesContent":["import React, { Children, useCallback, useState } from 'react';\n\ntype commentDataType = {\n  id: number,\n  title: string,\n  author: string,\n  comments : commentsChildren[];\n}\n\ntype commentsChildren = {\n  id: number,\n  title: string,\n  author: string,\n  children : commentsChildren[];  \n}\n\nconst commentData :commentDataType = {\n  id: 1,\n  title: \"Fake article title.\",\n  author: \"grzm\",\n  comments: [\n    {\n      id: 2,\n      title: \"Example comment here.\",\n      author: \"user2\",\n      children: [\n        {\n          id: 3,\n          title: \"Another example comment text.\",\n          author: \"user3\",\n          children: [\n            {\n              id: 4,\n              title: \"Another example comment text.\",\n              author: \"user4\",\n              children: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: 5,\n      title: \"Example comment here 2.\",\n      author: \"user5\",\n      children: []\n    }\n  ]\n}\n\n\ninterface IShowComments {\n  mycommentData : commentDataType;\n}\n\nfunction ShowComments(props : IShowComments) {\n  const {id,title,author} = props.mycommentData;\n  const nestedComments = (props.mycommentData.comments || []).map(commentDataType => {\n    return <ShowComments key={id} comments={commentDataType} />;\n  });\n  /*\n  const nestedComments = (Children || []).map(props.mycommentData =>  {\n    return <ShowComments key={id} mycommentData={commentData} />\n  })\n  */\n  return <div>\n    aaa{title}\n  </div>\n}\n\n\nfunction App() {\n  return (\n    <div className=\"comment-thread\">\n      nnnnn <ShowComments mycommentData={commentData} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}