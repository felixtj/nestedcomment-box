{"ast":null,"code":"var _jsxFileName = \"/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const commentData = {\n  id: 12,\n  text: \"Example comment here.\",\n  author: \"grzm\",\n  children: [{\n    id: 1,\n    text: \"Example comment here.\",\n    author: \"user2\",\n    children: [{\n      id: 2,\n      text: \"Another example comment text.\",\n      author: \"user3\",\n      children: [{\n        id: 3,\n        text: \"Another example comment text.\",\n        author: \"user4\",\n        children: []\n      }]\n    }]\n  }, {\n    id: 4,\n    text: \"Example comment here 2.\",\n    author: \"user5\",\n    children: []\n  }]\n};\n\nfunction Comments({\n  text,\n  children\n}) {}\n/*\ninterface Props {\n  // any props that come into the component\n  comments : FileNode;\n}\nconst Comment: React.FC<Props> = ({comments,...props}) =>  {\n  return <div>asdadasd</div>\n}\n\n*/\n\n/*\ninterface IComment  {\n  myComment : FileNode;\n}\n\nfunction Comment (props : IComment) {\n  const {id,title,author} = props.myComment;\n\n  const nestedComments = \n\n  console.table(props.myComment.comments);\n  return <div>re</div>\n}\n*/\n\n/*\nfunction Comment({ comment }) {\n  const nestedComments = (comment.children || []).map(comment => {\n    return <Comment key={comment.id} comment={comment} type=\"child\" />\n  })\n\n  return (\n    <div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n      <div>{comment.text}</div>\n      {nestedComments}\n    </div>\n  )\n}\n*/\n\n\n_c = Comments;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Comments\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/felix/Documents/Work2020/Github/projects/second-comment/src/App.tsx"],"names":["React","commentData","id","text","author","children","Comments","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAWA,OAAO,MAAMC,WAAqB,GAAG;AACnCC,EAAAA,EAAE,EAAE,EAD+B;AAEnCC,EAAAA,IAAI,EAAE,uBAF6B;AAGnCC,EAAAA,MAAM,EAAE,MAH2B;AAInCC,EAAAA,QAAQ,EAAE,CACR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,uBAFR;AAGEC,IAAAA,MAAM,EAAE,OAHV;AAIEC,IAAAA,QAAQ,EAAE,CACR;AACEH,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,+BAFR;AAGEC,MAAAA,MAAM,EAAE,OAHV;AAIEC,MAAAA,QAAQ,EAAE,CACR;AACEH,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,IAAI,EAAE,+BAFR;AAGEC,QAAAA,MAAM,EAAE,OAHV;AAIEC,QAAAA,QAAQ,EAAE;AAJZ,OADQ;AAJZ,KADQ;AAJZ,GADQ,EAqBR;AACEH,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,yBAFR;AAGEC,IAAAA,MAAM,EAAE,OAHV;AAIEC,IAAAA,QAAQ,EAAE;AAJZ,GArBQ;AAJyB,CAA9B;;AAkCP,SAASC,QAAT,CAAkB;AAACH,EAAAA,IAAD;AAAME,EAAAA;AAAN,CAAlB,EAA+C,CAE9C;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KA5CSC,Q;;AA8CT,SAASC,GAAT,GAAe;AACb,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import React from \"react\"\n\nexport interface FileNode   {\n  id : Number;\n  text : string;\n  //text : string;\n  author : string;\n  //comments : FileNode[];\n  children?: Array<any>;\n}\n\nexport const commentData: FileNode = {\n  id: 12,\n  text: \"Example comment here.\",\n  author: \"grzm\",\n  children: [\n    {\n      id: 1,\n      text: \"Example comment here.\",\n      author: \"user2\",\n      children: [\n        {\n          id: 2,\n          text: \"Another example comment text.\",\n          author: \"user3\",\n          children: [\n            {\n              id: 3,\n              text: \"Another example comment text.\",\n              author: \"user4\",\n              children: []\n            }\n          ]\n        }\n      ]\n    },\n    {\n      id: 4,\n      text: \"Example comment here 2.\",\n      author: \"user5\",\n      children: []\n    }\n  ]\n}\n\nfunction Comments({text,children} : FileNode ) {\n\n}\n\n\n/*\ninterface Props {\n  // any props that come into the component\n  comments : FileNode;\n}\nconst Comment: React.FC<Props> = ({comments,...props}) =>  {\n  return <div>asdadasd</div>\n}\n\n*/\n\n/*\ninterface IComment  {\n  myComment : FileNode;\n}\n\nfunction Comment (props : IComment) {\n  const {id,title,author} = props.myComment;\n\n  const nestedComments = \n\n  console.table(props.myComment.comments);\n  return <div>re</div>\n}\n*/\n\n/*\nfunction Comment({ comment }) {\n  const nestedComments = (comment.children || []).map(comment => {\n    return <Comment key={comment.id} comment={comment} type=\"child\" />\n  })\n\n  return (\n    <div style={{\"marginLeft\": \"25px\", \"marginTop\": \"10px\"}}>\n      <div>{comment.text}</div>\n      {nestedComments}\n    </div>\n  )\n}\n*/\n\nfunction App() {\n  return (\n    <div>\n      <Comment  />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}